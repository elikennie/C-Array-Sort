        -:    0:Source:C:/Users/ekenn/CLionProjects/asn2/testarray.c
        -:    0:Graph:C:\Users\ekenn\CLionProjects\asn2\cmake-build-debug-coverage\CMakeFiles\asn2.dir\testarray.c.gcno
        -:    0:Data:C:\Users\ekenn\CLionProjects\asn2\cmake-build-debug-coverage\CMakeFiles\asn2.dir\testarray.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <stdio.h>
        -:    2:
        -:    3://
        -:    4:// Created by ekenn on 2021-10-04.
        -:    5://
function test called 0 returned 0% blocks executed 0%
    #####:    6:int test() {
    #####:    7:    int array[] = {1,1,2,1,4,4,5,4,4,4,4,5,5,6,6,6,6,6,7,8,8,8,8,8,9,5};
        -:    8:
    #####:    9:    int n = sizeof(array)/sizeof(array[0]);
        -:   10:
        -:   11:        // finding and replacing any duplicates
    #####:   12:        for(int k = 0; k <= n; k++) {
    %%%%%:   12-block  0
    %%%%%:   12-block  1
    %%%%%:   12-block  2
branch  0 never executed
branch  1 never executed
        -:   13:
    #####:   14:            for(int l = k+1; l <= n; l++) {
    %%%%%:   14-block  0
    %%%%%:   14-block  1
branch  0 never executed
branch  1 never executed
    #####:   15:                if(array[k] == array[l]) {
    %%%%%:   15-block  0
branch  0 never executed
branch  1 never executed
    #####:   16:                    for(int k = l; k < n; k++)
    %%%%%:   16-block  0
    %%%%%:   16-block  1
branch  0 never executed
branch  1 never executed
    #####:   17:                    array[k] = array[k+1];
    %%%%%:   17-block  0
        -:   18:                }
    #####:   19:                array[n-1] = 0;
    %%%%%:   19-block  0
        -:   20:            }
        -:   21:        }
    #####:   22:        for (int i = 0; i <= n; i++) {
    %%%%%:   22-block  0
    %%%%%:   22-block  1
branch  0 never executed
branch  1 never executed
    #####:   23:            printf("%d ", array[i]);
    %%%%%:   23-block  0
call    0 never executed
        -:   24:        }
    #####:   25:    return 0;
    %%%%%:   25-block  0
        -:   26:    }
        -:   27:
        -:   28:
